{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "colcon_build",
            "type": "shell",
            "command": "colcon",
            "args": [
                "build",
                "--symlink-install",
                "--merge-install",
                "--cmake-args",
                "-DCMAKE_BUILD_TYPE=RelWithDebInfo",
                "-DCMAKE_EXPORT_COMPILE_COMMANDS=1",
                "-DCMAKE_CXX_STANDARD=14",
                // "-Wall",
                // "-Wextra",
                // "-Wpedantic"
                //"-DTUM_ICS_USE_QT5=1"
                // "-DDEB_BUILD=1"
            ],
            "problemMatcher": "$gcc",
            "group": {
                "kind": "build",
                "isDefault": true
            }
        },
        {
            "label": "colcon_build_pkg",
            "type": "shell",
            "command": "colcon",
            "args": [
                "build",
                "--packages-select",
                "${input:package}",
                "--merge-install",
                "--cmake-args",
                "-DCMAKE_BUILD_TYPE=RelWithDebInfo",
                "-DCMAKE_EXPORT_COMPILE_COMMANDS=1",
                "-DCMAKE_CXX_STANDARD=14",
                "-Wall",
                "-Wextra",
                "-Wpedantic"
                //"-DTUM_ICS_USE_QT5=1"
                // "-DDEB_BUILD=1"
            ],
            "problemMatcher": "$gcc",
            "group": {
                "kind": "build",
                "isDefault": true
            }
        },
        {
            "label": "colcon_build_pkg_above",
            "type": "shell",
            "command": "colcon",
            "args": [
                "build",
                "--packages-above",
                "${input:package}",
                "--merge-install",
                "--cmake-args",
                "-DCMAKE_BUILD_TYPE=RelWithDebInfo",
                "-DCMAKE_EXPORT_COMPILE_COMMANDS=1",
                "-DCMAKE_CXX_STANDARD=14",
                "-Wall",
                "-Wextra",
                "-Wpedantic"
                //"-DTUM_ICS_USE_QT5=1"
                // "-DDEB_BUILD=1"
            ],
            "problemMatcher": "$gcc",
            "group": {
                "kind": "build",
                "isDefault": true
            }
        },
        // Test tasks
        {
            "label": "test",
            "detail": "Run all unit tests and show results.",
            "type": "shell",
            "command": "colcon test --merge-install; colcon test-result",
            "group": {
                "kind": "test",
                "isDefault": true
            }
        },
        // Clean
        {
            "label": "clean",
            "detail": "Run the clean target",
            "type": "shell",
            "command": "colcon build --cmake-target clean",
            "problemMatcher": "$gcc"
        },
        {
            "label": "purge",
            "detail": "Purge workspace by deleting all generated files.",
            "type": "shell",
            "command": "rm -fr build install log; py3clean .",
            "problemMatcher": []
        },
        // Workspace editing tasks
        {
            "label": "new ament_cmake package",
            "detail": "Create a new ROS cpp package from a template.",
            "type": "shell",
            "command": "ros2 pkg create --destination-directory src --build-type ament_cmake ${input:package}",
            "problemMatcher": []
        },
        {
            "label": "new ament_python package",
            "detail": "Create a new ROS python package from a template.",
            "type": "shell",
            "command": "ros2 pkg create --destination-directory src --build-type ament_python ${input:package}",
            "problemMatcher": []
        },
        {
            "label": "install dependencies",
            "detail": "Install all dependencies specified in the workspaces package.xml files.",
            "type": "shell",
            "command": "sudo apt-get update && rosdep update && rosdep install --from-paths src --ignore-src -y",
            "problemMatcher": []
        }
    ],
    "inputs": [
        {
            "id": "package",
            "type": "promptString",
            "description": "Package name"
        }
    ]
}